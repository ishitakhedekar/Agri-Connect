{"ast":null,"code":"var _jsxFileName = \"D:\\\\Agri-Connect\\\\agri-connect\\\\src\\\\contexts\\\\LandContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandContext = /*#__PURE__*/createContext();\nexport const useLands = () => {\n  _s();\n  const context = useContext(LandContext);\n  if (!context) {\n    throw new Error('useLands must be used within a LandProvider');\n  }\n  return context;\n};\n_s(useLands, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LandProvider = ({\n  children\n}) => {\n  _s2();\n  const [lands, setLands] = useState(() => {\n    // Load lands from localStorage on initial load\n    const savedLands = localStorage.getItem('lands');\n    return savedLands ? JSON.parse(savedLands) : [];\n  });\n\n  // Save lands to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('lands', JSON.stringify(lands));\n  }, [lands]);\n  const addLand = newLand => {\n    const landWithId = {\n      ...newLand,\n      id: Date.now(),\n      // Simple ID generation\n      status: 'available',\n      image: newLand.imageUrl || 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?w=400',\n      area: parseFloat(newLand.area),\n      soilType: newLand.landType // Map landType to soilType for consistency\n    };\n    setLands(prevLands => [landWithId, ...prevLands]);\n  };\n  const updateLand = (id, updatedLand) => {\n    setLands(prevLands => prevLands.map(land => land.id === id ? {\n      ...land,\n      ...updatedLand\n    } : land));\n  };\n  const deleteLand = id => {\n    setLands(prevLands => prevLands.filter(land => land.id !== id));\n  };\n  const value = {\n    lands,\n    addLand,\n    updateLand,\n    deleteLand\n  };\n  return /*#__PURE__*/_jsxDEV(LandContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s2(LandProvider, \"pE/fgsEifXdzUw4zVzPb5yL9OHo=\");\n_c = LandProvider;\nvar _c;\n$RefreshReg$(_c, \"LandProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LandContext","useLands","_s","context","Error","LandProvider","children","_s2","lands","setLands","savedLands","localStorage","getItem","JSON","parse","setItem","stringify","addLand","newLand","landWithId","id","Date","now","status","image","imageUrl","area","parseFloat","soilType","landType","prevLands","updateLand","updatedLand","map","land","deleteLand","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Agri-Connect/agri-connect/src/contexts/LandContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst LandContext = createContext();\r\n\r\nexport const useLands = () => {\r\n  const context = useContext(LandContext);\r\n  if (!context) {\r\n    throw new Error('useLands must be used within a LandProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LandProvider = ({ children }) => {\r\n  const [lands, setLands] = useState(() => {\r\n    // Load lands from localStorage on initial load\r\n    const savedLands = localStorage.getItem('lands');\r\n    return savedLands ? JSON.parse(savedLands) : [];\r\n  });\r\n\r\n  // Save lands to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('lands', JSON.stringify(lands));\r\n  }, [lands]);\r\n\r\n  const addLand = (newLand) => {\r\n    const landWithId = {\r\n      ...newLand,\r\n      id: Date.now(), // Simple ID generation\r\n      status: 'available',\r\n      image: newLand.imageUrl || 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?w=400',\r\n      area: parseFloat(newLand.area),\r\n      soilType: newLand.landType, // Map landType to soilType for consistency\r\n    };\r\n    \r\n    setLands(prevLands => [landWithId, ...prevLands]);\r\n  };\r\n\r\n  const updateLand = (id, updatedLand) => {\r\n    setLands(prevLands => \r\n      prevLands.map(land => land.id === id ? { ...land, ...updatedLand } : land)\r\n    );\r\n  };\r\n\r\n  const deleteLand = (id) => {\r\n    setLands(prevLands => prevLands.filter(land => land.id !== id));\r\n  };\r\n\r\n  const value = {\r\n    lands,\r\n    addLand,\r\n    updateLand,\r\n    deleteLand,\r\n  };\r\n\r\n  return <LandContext.Provider value={value}>{children}</LandContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACvC;IACA,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;;EAEF;EACAb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,OAAO,GAAIC,OAAO,IAAK;IAC3B,MAAMC,UAAU,GAAG;MACjB,GAAGD,OAAO;MACVE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAEN,OAAO,CAACO,QAAQ,IAAI,oEAAoE;MAC/FC,IAAI,EAAEC,UAAU,CAACT,OAAO,CAACQ,IAAI,CAAC;MAC9BE,QAAQ,EAAEV,OAAO,CAACW,QAAQ,CAAE;IAC9B,CAAC;IAEDpB,QAAQ,CAACqB,SAAS,IAAI,CAACX,UAAU,EAAE,GAAGW,SAAS,CAAC,CAAC;EACnD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACX,EAAE,EAAEY,WAAW,KAAK;IACtCvB,QAAQ,CAACqB,SAAS,IAChBA,SAAS,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,IAAI;MAAE,GAAGF;IAAY,CAAC,GAAGE,IAAI,CAC3E,CAAC;EACH,CAAC;EAED,MAAMC,UAAU,GAAIf,EAAE,IAAK;IACzBX,QAAQ,CAACqB,SAAS,IAAIA,SAAS,CAACM,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACd,EAAE,KAAKA,EAAE,CAAC,CAAC;EACjE,CAAC;EAED,MAAMiB,KAAK,GAAG;IACZ7B,KAAK;IACLS,OAAO;IACPc,UAAU;IACVI;EACF,CAAC;EAED,oBAAOpC,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA/B,QAAA,EAAEA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACnC,GAAA,CA3CWF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}